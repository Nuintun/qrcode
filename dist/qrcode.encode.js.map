{"version":3,"sources":["webpack:///webpack/bootstrap afcdaa977d21bee5c44d?a334*","webpack:///./src/encode/qrcode.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACtCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL,2BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA,EAAC","file":"qrcode.encode.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap afcdaa977d21bee5c44d","/**\n * QREncode\n */\n'use strict';\n\n(function ($, window, document, undefined){\n  $.QREncode = {\n    /**\n     * 配置\n     */\n    config: {\n      text: 'QRCode', // 默认文字\n      render: 'canvas',\n      bgColor: '#FFF', // 背景色\n      moduleColor: '#000', // 前景色\n      moduleSize: 5, // 模块大小\n      mode: 4, // 编码格式，默认8字节编码\n      ECLevel: 2, // 纠错码等级，默认30%\n      margin: 4, // 留白\n      logo: '', // logo;\n      error: $.noop\n    },\n    Render: {}\n  };\n\n  /**\n   * 二维码编码\n   * @param config\n   * @param callback\n   * @returns {*}\n   * @constructor\n   */\n  function Encode(config, callback){\n    this.config = config;\n\n    // 初始化\n    return this._init(callback);\n  }\n\n  Encode.prototype = {\n    _init: function (callback){\n      var config = this.config;\n\n      this.qr = new QREncode();\n\n      // 含有 Logo，使用最大容错\n      if (config.logo) {\n        config.ECLevel = 2;\n      }\n\n      try {\n        this.version = this.qr.getVersionFromLength(config.ECLevel, config.mode, config.text);\n        this.pixArr = this.qr.encodeToPix(config.mode, config.text, this.version, config.ECLevel);\n      } catch (e) {\n        $.isFunction(config.error) && config.error(e);\n      }\n\n      this.pixArr && $.QREncode.Render[config.render](this, callback);\n    }\n  };\n\n  /**\n   * 二维码编码\n   * @param cfg\n   * @constructor\n   */\n  $.fn.QREncode = function (cfg){\n    var that = this;\n    var config = {};\n\n    if (typeof(cfg) === 'string') {\n      config.text = cfg;\n    } else {\n      config = $.extend({}, $.QREncode.config, cfg);\n    }\n\n    config.moduleSize = Math.round(config.moduleSize);\n    config.margin = Math.round(config.margin);\n    config.moduleSize = config.moduleSize > 0 ? config.moduleSize : $.QREncode.config.moduleSize;\n    config.margin = config.margin < 0 ? $.QREncode.config.margin : config.margin;\n\n    new Encode(config, function (qrdom){\n      that.each(function (i, item){\n        $(item).empty().append(qrdom);\n      });\n    });\n  };\n})(jQuery, window, document);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/encode/qrcode.js\n// module id = 0\n// module chunks = 2"],"sourceRoot":""}